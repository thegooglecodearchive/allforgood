<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="__MSG_title__"
               description="__MSG_description__"
               width="250"
               height="361"
               author="Gadgetfactory"
               screenshot="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/afg.png"
               thumbnail="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/afg-thm.png"
               author_email="developer.gadget@gmail.com">
    <Require feature="setprefs" />
    <Require feature="dynamic-height" />
    <Require feature="views" />
    <Locale lang="en"
            messages="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/afg_en_ALL.xml" />
    <Locale messages="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/afg_en_ALL.xml" />
  </ModulePrefs>
  <UserPref name="storiesToRead"
            display_name="__MSG_listings_per_page__"
            default_value="4"
            datatype="enum">
    <EnumValue value="4" />
    <EnumValue value="5" />
    <EnumValue value="6" />
    <EnumValue value="7" />
    <EnumValue value="8" />
    <EnumValue value="9" />
    <EnumValue value="10" />
  </UserPref>
  <UserPref name="themesFolder"
            display_name="__MSG_themes_folder__"
            default_value="" />
  <UserPref name="prefLocation"
            display_name="__MSG_default_location__"
            default_value="" />
  <UserPref name="preferredKeywords"
            display_name="__MSG_preferred_keywords__"
            default_value="" />
  <UserPref name="searchText" datatype="hidden" default_value="" />
<Content type="html" view="home">
<![CDATA[
<style type="text/css">
body,
div,
form,
h2,
h3,
li,
p,
ul {
  font-weight: normal;
  margin: 0;
  padding: 0;
}
body {
  font-family: arial, sans-serif;
  font-size: 12px;
  overflow: hidden;
}
img {
  border: 0;
  cursor: pointer;
}
ul {list-style: none;}
h2 {
  font-size: 100%;
  font-weight: normal;
}
h3 {
  font-size: 100%;
  font-weight: bold;
  line-height: 130%;
}
p,
a,
span {line-height: 130%;}
form {text-align: center;}
a,
a:link,
a:visited {
  color: #039;
  text-decoration: none;
}
a:hover {
  color: #039;
  text-decoration: underline;
}

/* Feed data related styles. */
.clear {
  clear: both;
  font-size: 0;
  height: 0;
  line-height: 0;
  overflow: hidden;
}
.afg-record {
  border-bottom: 1px solid #666;
  padding: 5px;
}
.afg-record-na {
  height: 60px;
  margin: 20px 0;
  text-align: center;
}
.afg-rec-meta {color: #666;}
.afg-rec-title {font-weight: bold;}

/* Modal popup related styles. */
.afg-mask {
  background-color: #666;
  filter: alpha(opacity=80);
  height: 100%;
  opacity: 0.8;
  width: 100%;
  -moz-opacity: 0.8;
}
.afg-mask,
.afg-dialog {
  left: 0;
  position: absolute;
  top: 0;
}

/* Page layout realted styles. */
#afg-header-region {
  background-color: #1155a0;
  overflow: hidden;
  width: 100%;
}
#afg-branding-region {padding: 5px;}
#afg-footer-region {
  background-color: #1155a0;
  overflow: hidden;
  width: 100%;
}
#afg-footer-content {float: right;}
#afg-content-region {
  background-color: #fff;
  overflow: hidden;
  width: 100%;
}
#afg-branding-btn {
  float: right;
  text-align: left;
}
#afg-branding-title {
  color: #fff;
  margin-right: 50px;
}
#afg-gadget-dialog {
  margin: 33px 5% 0 5%;
  width: 90%;
  text-align: center;
}

/* Modal popup content related styles. */
.afg-text {width: 100%;}
.afg-gobutton {margin-left: 10px;}
.afg-popup-link,
.afg-popup-link:link,
.afg-popup-link:visited,
.afg-popup-link:hover {
  color: #fff;
}

/* Style for pagination. */
.pagination {
  padding: 2px 5px;
  text-align: center;
}

/* Image Cropper related styles. */
.image-cropper {
  display: block;
  overflow: hidden;
  text-align: center;
}
.image-cropper div {margin: 0 -9999px;}
#branding-logo {
  height: 18px;
  width: 126px;
  float: left;
}
#branding-logo img {height: 18px;}

/* Style for loading. */
#afg-loading-container {
  text-align: center;
  width: 100%;
}

/* Header links related styles. */
#header-links li{
  float: left;
  padding-right: 10px;
}

#header-links a,
#header-links a:link,
#header-links a:visited,
#header-links a:hover {
  color: #fff;
  text-decoration: underline;
}
</style>
<script>
/**
 * User prefs.
 * @type {_IG_Prefs}
 */
var prefs = new _IG_Prefs();

/**
 * URL relates to get feed functionality.
 * @const
 * @type {string}
 */
var FEED_URL = 'http://www.allforgood.org/api/volopps?output=rss';

/**
 * To store or cache the feeds between pagination.
 * @type {Array}
 */
var feedRecords = [];

/**
 * Number of pages to be cached on each request to server.
 * @const
 * @type {number}
 */
var PAGES_PER_QUERY = 3;

/**
 * Parameters to be sent with feed URL to get feeds.
 * @type {Object}
 */
var feedParams = {
  vol_loc: '',
  q: '',
  key: 'gf-gadget',
  start: 1,
  num: prefs.getInt('storiesToRead') * PAGES_PER_QUERY + 1
};

/**
 * To store the information on current page number.
 * @type {number}
 */
var curPage = 1;

/**
 * To store the next page information for the cached pages during pagination
 * as key value pair.
 * @type {Object}
 */
var nextPageInfo = {};

/**
 * Adjust the height of the mask automatically.
 * Height 100% for the absolute positioned div is not supported in IE6.
 * This function will be called on window resize event and
 * while showing the Popup container with mask.
 */
function adjustMaskHeight() {
  _gel('afg-gadget-mask').style.height = _gel('afg-main').offsetHeight + 'px';
}

/**
 * Adjust iframe height.
 */
function adjustIFrameHeight() {
  var rootElement = _gel('afg-main');
  var gadgetHeight = rootElement.clientHeight || rootElement.offsetHeight;
  _IG_AdjustIFrameHeight(gadgetHeight);
}

/**
 * Convert to date object from date string.
 * @param {string} str The date in string format.
 *     If nothing is passed, returns current date.
 * @return {Date} Returns the date object of the given string.
 */
function getDateObj(str) {
  return new Date((str || '').replace(/-/g, '/'));
}

/**
 * This method formats the date string to expected format.
 * @param {string} str The date string from the feed.
 *     The expected input format is yyyy-MM-dd hh:mm:ss.
 * @return {string} Holds date string in 'MM/dd/yyyy' format.
 */
function getDateStr(str) {
  var date = getDateObj(str);
  var day = date.getDate();
  var month = date.getMonth() + 1;
  if (day < 10) {
    day = '0' + day;
  }
  if (month < 10) {
    month = '0' + month;
  }
  return [month, day, date.getFullYear()].join('/');
}

/**
 * This method will create HTML element string for single feed item.
 * @param {number} feedIndex Json feed with neccessary changes
 *     for single feed item.
 * @return {string} Returns html string for single feed item.
 */
function getHtmlForOneRecord(feedIndex) {
  var obj = feedRecords[feedIndex];
  var html = [
    '<div class="afg-record ', obj.id, '">',
    '<h3 class="afg-rec-title"> ',
    '<a href="', obj.titleLink, '" target="_blank">', obj.title, '</a>',
    '</h3>',
    '<p class="afg-rec-meta"> ',
    obj.location, ' - ', obj.period,
    '</p>',
    '</div>'
  ];
  return html.join('');
}

/**
 * This function stops the propagation of the event and
 * prevents the default behaviour of the event.
 * @param {Event} event Window event.
 * @return {boolean} Always false will be returned.
 */
function stopEvents(event) {
  event = event || window.event;
  event.stopPropagation();
  event.preventDefault();
  return false;
}

/**
 * This function updates the Branding title based on the location.
 * @param {string} val Search location value.
 * @param {string} searchText Search text.
 */
function updateTitle(val, searchText) {
  prefs.set('searchText' , searchText || '');
  var str = [prefs.getMsg('recent_listings'), ' '];
  if (val) {
    str.push(prefs.getMsg('near'), ' <strong>', val, '<\/strong> ');
    _gel('afg-change-location').style.display = 'block';
    _gel('afg-set-location').style.display = 'none';
  } else {
    _gel('afg-change-location').style.display = 'none';
    _gel('afg-set-location').style.display = 'block';
  }
  if (searchText) {
    str.push(prefs.getMsg('matching'), ' <strong>\'',
        searchText, '\'<\/strong>');
    _gel('afg-clear-search').style.display = 'block';
  } else {
    _gel('afg-clear-search').style.display = 'none';
  }
  _gel('afg-branding-title').innerHTML = str.join('');
}

/**
 * Replaces the content region of the container by loading image.
 * The width of the passed element will not be changed.
 * The existing height will be retained, if it is more than 100px,
 * otherwise 100px will be set as its height.
 */
function loading() {
  var element = _gel('afg-content');
  var height = element.clientHeight || element.offsetHeight;
  var MIN_HEIGHT = 100;
  if (height < MIN_HEIGHT) {
    height = MIN_HEIGHT;
  }
  var html = [
    '<div id="afg-loading-container" style="',
    'margin:50px 0;height:', height - 100, 'px;">',
    '<img src="http://www.google.com/ig/images/spinner.gif" />',
    '<div>', prefs.getMsg('loading'), '</div></div>'
  ];
  element.innerHTML = html.join('');
}

/**
 * This function is used to show a popup dialog.
 * @param {string} showString Used to decide which form to be shown.
 */
function showDialog(showString) {
  _gel('afg-search-region-home').style.display = 'block';
  var searchForm = _gel('afg-search-form');
  var locationForm = _gel('afg-location-form');
  var focusElement;
  if (showString == 'location') {
    searchForm.style.display = 'none';
    locationForm.style.display = 'block';
    focusElement = locationForm.elements[0];
  } else {
    locationForm.style.display = 'none';
    searchForm.style.display = 'block';
    focusElement = searchForm.elements[0];
  }
  focusElement.focus();
  focusElement.value = '';
  adjustMaskHeight();
}

/**
 * This function is used to hide the popup dialog.
 */
function hideDialog() {
  _gel('afg-search-region-home').style.display = 'none';
}

/**
 * Show the Records and update pagination objects
 */
function showRecordsAndUpdatePagination() {
  var html = [];
  var startIndex = (curPage - 1) * prefs.getInt('storiesToRead');
  var maxEndIndex = startIndex + prefs.getInt('storiesToRead');
  var endIndex = (maxEndIndex < feedRecords.length) ?
                 maxEndIndex : feedRecords.length;
  for (var i = startIndex; i < endIndex; i++) {
    html.push(getHtmlForOneRecord(i));
  }
  // Add pagination.
  if (curPage !== 1 || nextPageInfo['page-' + curPage]) {
    html.push('<div class="pagination">',
              '<div style="width:100%;overflow:hidden;">');
    if (curPage !== 1) {
      html.push('<a href="#" onclick="navigatePage(-1);return false;" ',
                'style="float:left;"  class="afg-pagination">&lt; ',
                prefs.getMsg('previous'), '</a>');
    }
    if (nextPageInfo['page-' + curPage]) {
      html.push('<a href="#" onclick="navigatePage(1);return false;" ',
                'style="float:right;" class="afg-pagination">',
                prefs.getMsg('next'), ' &gt;</a>');
    }
    html.push('</div></div>');
  }
  // Update content html.
  _gel('afg-content').innerHTML = html.join('');
  adjustIFrameHeight();
}

/**
 * Response error handler function.
 * This function will be called if the request is timed out.
 */
function responseErrorHandler() {
  var html = [
    '<div class="afg-record-na">', prefs.getMsg('no_data'),
    '&nbsp;<a href="#" onclick="requestFeed();return false;">',
    prefs.getMsg('try_again'), '</a></div>'
  ];
  _gel('afg-content').innerHTML = html.join('');
  adjustIFrameHeight();
}

/**
 * Update feed records from the received feed XML.
 * @param {Node} xmlContent XML content as callback function response.
 * @param {number} timerId Value stores a reference to the timer.
 */
function fetchRecords(xmlContent, timerId) {
  // Cancels the timeout set previously.
  clearTimeout(timerId);
  var recordsRequested = prefs.getInt('storiesToRead') * PAGES_PER_QUERY + 1;
  var pageRef, recordRef, item, jsonFeed, curNode;

  try {
    if (typeof xmlContent != 'object') {
      throw new Error('Invalid feed type');
    }

    var items = xmlContent.getElementsByTagName('item');
    var length = items.length;

    if (!length) {
      throw new Error('No feed available');
    }

    if (length == recordsRequested) {
      length = items.length - 1;
    }

    for (var i = 0; i < PAGES_PER_QUERY; i++) {
      pageRef = 'page-' + (curPage + i);
      recordRef = (i + 1) * prefs.getInt('storiesToRead');
      if (items[recordRef]) {
        nextPageInfo[pageRef] = true;
      }
    }

    for (var j = 0; j < length; j++) {
      item = items[j];
      jsonFeed = {id: 'rec-' + j};
      for (curNode = item.firstChild; curNode; curNode = curNode.nextSibling) {
        if (curNode.nodeType == 1) {
          var nodeVal = curNode.firstChild ? curNode.firstChild.nodeValue : '';
          switch (curNode.nodeName) {
            case 'title':
              jsonFeed.title = nodeVal;
              break;
            case 'link':
              jsonFeed.titleLink = nodeVal;
              break;
            case 'fp:location_name':
              jsonFeed.location = nodeVal;
              break;
            case 'description':
              jsonFeed.desc = nodeVal;
              break;
            case 'fp:startDate':
              jsonFeed.stdate = nodeVal;
              break;
            case 'fp:endDate':
              jsonFeed.enddate = nodeVal;
              break;
          }
        }
      }
      jsonFeed.period = getDateStr(jsonFeed.stdate) +
          ' - ' + getDateStr(jsonFeed.enddate);
      feedRecords.push(jsonFeed);
    }
    showRecordsAndUpdatePagination();
  } catch (err) {
    // For both 'Invalid feed type' and 'No feed available' errors,
    // redirect to previous page if available,
    // shows 'Try again' message otherwise.
    if (curPage > 1) {
      nextPageInfo['page-' + (curPage - 1)] = false;
      navigatePage(-1);
    } else {
      var searchText = prefs.getString('searchText');
      var location = prefs.getString('prefLocation');
      // TODO: this sort of concatenation is not suitable for i18n
      var html = ['<div class="afg-record-na">', prefs.getMsg('your_search')];
      if (searchText) {
        html.push(' <strong>\'', searchText, '\'</strong> ');
      } else if (location) {
        html.push(' ', prefs.getMsg('near'),
            ' <strong>\'', location, '\'</strong> ');
      }
      html.push(' ', prefs.getMsg('not_match'), '<br/>');
      if (searchText) {
        html.push('<a href="#" onclick="showDialog(\'search\'); ',
            'return false;">', prefs.getMsg('search_again'), '</a></div>');
      } else if (location) {
        html.push('<a href="#" onclick="showDialog(\'location\'); ',
            'return false;">', prefs.getMsg('change_location'), '</a></div>');
      }
      _gel('afg-content').innerHTML = html.join('');
      adjustIFrameHeight();
    }
  }
}

/**
 * Prepare URL and send request for the feed.
 * On successful Ajax call fetchRecords() will be called.
 */
function requestFeed() {
  var feedUrl = [FEED_URL];
  for (var key in feedParams) {
    feedUrl.push(key + '=' + _esc(feedParams[key]));
  }
  var feedUrlString = feedUrl.join('&');
  loading();
  // Call responseErrorHandler function after 5 seconds.
  var timerId = setTimeout(responseErrorHandler, 5000);
  _IG_FetchXmlContent(feedUrlString, _IG_Callback(fetchRecords, timerId));
}

/**
 * This function will be called on all navigation stuff.
 * @param {number} step Navigation steps.
 */
function navigatePage(step) {
  curPage += step;
  // Check for avilablity of records.
  var startIndex = (curPage - 1) * prefs.getInt('storiesToRead');
  if (feedRecords[startIndex]) {
    // Records are already available in the feed, just parse it.
    showRecordsAndUpdatePagination();
  } else {
    // Records are not available, request for records.
    feedParams.start = startIndex + 1;
    requestFeed();
  }
}

/**
 * This function reads the user input,
 * updates title based on the prefered location,
 * resets the feed url parameters, cached feed records and meta information.
 * Also calls requestFeed() to initiate the request.
 * @param {string} opt_searchTxt Search text (optional).
 * @param {boolean} opt_hidePopup Information whether to hide the
 *     dialog window or not (optional).
 */
function search(opt_searchTxt, opt_hidePopup) {
  var location = prefs.getString('prefLocation');
  var prefKeywords = prefs.getString('preferredKeywords');
  var searchText = opt_searchTxt || _gel('afg-search-text').value || '';
  updateTitle(_trim(location), searchText);

  feedParams.start = 1;
  feedParams.vol_loc = location;
  feedParams.q = prefKeywords + ' ' + searchText;
  // Reset FeedRecord and pagination related variables.
  feedRecords = [];
  curPage = 1;
  nextPageInfo = {};
  requestFeed();
  if (opt_hidePopup) {
    hideDialog();
  }
}

/**
 * This function is used to cancel the modal window when 'esc' key is pressed.
 * @param {Event} event Window event.
 */
function isCancel(event) {
  event = event || window.event;
  var key = event.keyCode || event.which || event.charCode;
  if (key == 27) {
    hideDialog();
  }
}

/**
 * Function to handle custom theme.
 */
function handleTheme() {
  var themePath = _trim(prefs.getString('themesFolder'));
  if (themePath) {
    var linkElement = document.createElement('link');
    linkElement.href = themePath + '/style.css';
    linkElement.rel = 'stylesheet';
    document.getElementsByTagName('head')[0].appendChild(linkElement);
    document.getElementsByTagName('body')[0].className += ' site-theme';

    _gel('afg-search-button').src = themePath + '/' +
        prefs.getMsg('search_btn') + '.gif';
    _gel('afg-embed-button').src = themePath + '/' +
        prefs.getMsg('embed_btn') + '.gif';
    _gel('afg-go-button').src = themePath + '/' +
        prefs.getMsg('go_btn') + '.gif';
    _gel('afg-ok-button').src = themePath + '/' +
        prefs.getMsg('ok_btn') + '.gif';
    _gel('afg-cancel-button').src = themePath + '/' +
        prefs.getMsg('cancel_btn') + '.gif';
    _gel('afg-cancel-button1').src = themePath + '/' +
        prefs.getMsg('cancel_btn') + '.gif';
  }
}

/**
 * Used to clear the search text box.
 */
function clearSearch() {
  _gel('afg-search-text').value = '';
  search();
}

/**
 * Set the location and restart the search.
 * @param {string} optLocation Optional location text.
 */
function setLocation(optLocation) {
  var location = optLocation || _gel('afg-location-text').value || '';
  prefs.set('prefLocation', location);
  search();
  hideDialog();
}

/**
 * Used for setting the logo according to the size of container.
 */
function setLogoImage() {
  var gadgetWidth = 0;
  var themePath = _trim(prefs.getString('themesFolder'));
  var imgPath = themePath ?
      themePath + '/logo' :
      'http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/logo';
  if (typeof(window.innerWidth) == 'number') {
    // Non-IE
    gadgetWidth = window.innerWidth;
  } else if (document.documentElement && document.documentElement.clientWidth) {
    // IE 6+
    gadgetWidth = document.documentElement.clientWidth;
  } else if (document.body && document.body.clientWidth) {
    gadgetWidth = document.body.clientWidth;
  }

  // Loading branding logo according to availble size.
  var brandLogoStyle = _gel('branding-logo').style;
  var logoImage = _gel('logo-img');
  var logoImageStyle = logoImage.style;
  if (gadgetWidth <= 150) {
    imgPath += '_180';
    brandLogoStyle.width = '83px';
    brandLogoStyle.height = '';
    logoImageStyle.height = '11px';
  } else if (gadgetWidth <= 180){
    imgPath += '_180';
    brandLogoStyle.width = '95px';
    brandLogoStyle.height = '';
    logoImageStyle.height = '14px';
  } else if (gadgetWidth <= 200){
    imgPath += '_200';
    brandLogoStyle.width = '110px';
    brandLogoStyle.height = '';
    logoImageStyle.height = '18px';
  } else {
    brandLogoStyle.width = '126px';
    brandLogoStyle.height = '18px';
    logoImageStyle.height = '18px';
  }
  //Setting the source for logo image.
  logoImage.src = imgPath + '.gif';
}

/**
 * Called on load of the gadget.
 */
function init() {
  handleTheme();
  setLogoImage();
  search();
}

/**
 * Resize handler to adjust the mask element height.
 * It sets mask element height equals to the body height.
 */
window.onresize = function() {
  setLogoImage();
  adjustIFrameHeight();
  adjustMaskHeight();
};

/**
 * Entry point.
 */
_IG_RegisterOnloadHandler(init);

</script>
<div id="afg-main">
  <div id="afg-header-region">
    <div id="afg-branding-region">
      <div id="afg-branding-btn">
        <img id="afg-search-button" class="afg-search-button"
            alt="__MSG_search__" title="__MSG_search__"
            src="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_search_btn__.gif"
            onerror="this.src='http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_search_btn__.gif'"
            onclick="showDialog('search')">
      </div>
      <h2 id="afg-branding-title"></h2>
      <ul id="header-links">
      <li id="afg-set-location"><a href="javascript:showDialog('location')">__MSG_set_location__</a></li>
      <li id="afg-change-location"><a href="javascript:showDialog('location')">__MSG_change_location__</a></li>
      <li id="afg-clear-search"><a href="javascript:clearSearch()">__MSG_clear_search__</a></li>
      </ul>
      <div class="clear">&nbsp;</div>
    </div>
  </div>
  <div id="afg-content-region">
    <div id="afg-content"></div>
  </div>
  <div id="afg-footer-region">
    <div style="margin:5px">
      <div id="afg-footer-content">
        <form target="_blank" action="http://www.gmodules.com/ig/creator">
          <input type="hidden" name="synd" value="open" />
          <input type="hidden" name="url"
              value="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/gadget.xml"/>
          <input type="hidden" name="nocache" value="1" />
          <input type="image" title="__MSG_embed__" class="afg-embed-button" id="afg-embed-button"
              style="cursor:pointer;" src="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_embed_btn__.gif"
              onerror="this.src='http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_embed_btn__.gif'"/>
        </form>
      </div>
      <a id="branding-logo" class="image-cropper" target="_blank"
          href="http://www.allforgood.org">
        <div>
          <img id="logo-img" alt="__MSG_brand_title__" title="__MSG_brand_title__"
              src="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/logo.gif"
              onerror="this.src='http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/logo.gif'"/>
        </div>
      </a>
      <div class="clear">&nbsp;</div>
    </div>
  </div>
  <!-- Search Region for Home View -->
  <div id="afg-search-region-home" style="display: none;">
    <div id="afg-gadget-mask" class="afg-mask" onclick="return stopEvents(event)"></div>
    <div id="afg-gadget-dialog" class="afg-dialog">
      <form name="frmSearch" id="afg-search-form" action="#" onsubmit="search();hideDialog();return false;">
        <div style="width:90%; margin:auto;">
          <input name="searchText" id="afg-search-text" tabIndex="1" type="text" onkeyup="isCancel(event);" autocomplete="off" class="afg-text"/>
          <div style="text-align:left; color: #fff; margin:1px 0 2px">
            __MSG_example__
            <a href="javascript:search('__MSG_education__', 1)" class="afg-popup-link">
                __MSG_education__</a>,
            <a href="javascript:search('__MSG_health__', 1)" class="afg-popup-link">
                __MSG_health__</a>,
            <a href="javascript:search('__MSG_nature__', 1)" class="afg-popup-link">
                __MSG_nature__</a>
          </div>
        </div>
        <div>
          <input id="afg-go-button" class="afg-go-button" tabIndex="2"
              alt="__MSG_go__" title="__MSG_go__" type="image"
              src="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_go_btn__.gif"
              onerror="this.src='http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_go_btn__.gif'"/>
          <img id="afg-cancel-button" class="afg-cancel-button"
              alt="__MSG_cancel__" title="__MSG_cancel__" tabIndex="3"
              onclick="hideDialog();" onkeypress="hideDialog();"
              src="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif"
              onerror="this.src='http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif'" />
        </div>
      </form>
      <form name="frmSearch" id="afg-location-form" action="#" onsubmit="setLocation();return false;">
        <div style="width:90%; margin:auto;">
          <input name="locationText" id="afg-location-text" tabIndex="1" type="text" onkeyup="isCancel(event);" autocomplete="off" class="afg-text"/>
          <div style="text-align:left; color: #fff; margin:1px 0 2px">
            __MSG_example__
            <a href="javascript:setLocation('__MSG_default_location_value__')" class="afg-popup-link">
                __MSG_default_location_value__</a>
          </div>
        </div>
        <div>
          <input id="afg-ok-button" class="afg-ok-button" tabIndex="2"
              alt="__MSG_ok__" title="__MSG_ok__" type="image"
              src="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_ok_btn__.gif"
              onerror="this.src='http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_ok_btn__.gif'"/>
          <img id="afg-cancel-button1" class="afg-cancel-button"
              alt="__MSG_cancel__" title="__MSG_cancel__" tabIndex="3"
              onclick="hideDialog();" onkeypress="hideDialog();"
              src="http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif"
              onerror="this.src='http://footprint2009dev.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif'" />
        </div>
      </form>
    </div>
  </div>
</div>
]]>
</Content>
</Module>

