<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="All for Good"
               description="__MSG_description__"
               width="250"
               height="361"
               author="Gadgetfactory"
               screenshot="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/afg.png"
               thumbnail="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/afg-thm.png"
               author_email="developer.gadget@gmail.com">
    <Require feature="setprefs" />
    <Require feature="dynamic-height" />
    <Require feature="views" />
    <Require feature="minimessage" />
    <Locale lang="en"
            messages="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/afg_en_ALL.xml" />
    <Locale messages="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/afg_en_ALL.xml" />
  </ModulePrefs>
  <UserPref name="storiesToRead"
            display_name="__MSG_listings_per_page__"
            default_value="4"
            datatype="enum">
    <EnumValue value="4" />
    <EnumValue value="5" />
    <EnumValue value="6" />
    <EnumValue value="7" />
    <EnumValue value="8" />
    <EnumValue value="9" />
    <EnumValue value="10" />
  </UserPref>
  <UserPref name="timePeriod" display_name="__MSG_time_period__" default_value="" datatype="enum">
    <EnumValue value="everything" display_value="__MSG_everything__"/>
    <EnumValue value="today" display_value="__MSG_today__"/>
    <EnumValue value="this_weekend" display_value="__MSG_this_weekend__"/>
    <EnumValue value="this_week" display_value="__MSG_this_week__"/>
    <EnumValue value="this_month" display_value="__MSG_this_month__"/>
    <EnumValue value="911" display_value="__MSG_september_11__"/>
  </UserPref>
  <UserPref name="category" display_name="__MSG_category__" default_value="" datatype="enum">
    <EnumValue value="" display_value="__MSG_all__"/>
    <EnumValue value="OilSpill" display_value="OilSpill"/>
    <EnumValue value="Education" display_value="__MSG_education__"/>
    <EnumValue value="Hunger" display_value="Hunger"/>
    <EnumValue value="Animals" display_value="Animals"/>
    <EnumValue value="Health" display_value="Health"/>
    <EnumValue value="Seniors" display_value="__MSG_seniors__"/>
    <EnumValue value="Technology" display_value="__MSG_technology__"/>
    <EnumValue value="Poverty" display_value="Poverty"/>
  </UserPref>
  <UserPref name="prefLocation"
            display_name="__MSG_default_location__"
            default_value="" />
  <UserPref name="preferredKeywords"
            display_name="__MSG_preferred_keywords__"
            default_value="" />
  <UserPref name="themesFolder"
            display_name="__MSG_themes_folder__"
            default_value="" />
  <UserPref name="searchText" datatype="hidden" default_value="" />
  <UserPref name="hideSettings" datatype="hidden" default_value="0" />
<Content type="html" view="home">
<![CDATA[
<style type="text/css">
body,
div,
form,
h2,
h3,
li,
p,
ul {
  font-weight: normal;
  margin: 0;
  padding: 0;
}
body {
  font-family: arial, sans-serif;
  font-size: 12px;
  overflow: hidden;
}
img {
  border: 0;
  cursor: pointer;
}
ul {list-style: none;}
h2 {
  font-size: 100%;
  font-weight: normal;
}
h3 {
  font-size: 100%;
  font-weight: bold;
  line-height: 130%;
}
p,
a,
span {line-height: 130%;}
form {text-align: center;}
a,
a:link,
a:visited {
  color: #039;
  text-decoration: none;
}
a:hover {
  color: #039;
  text-decoration: underline;
}

.mmlib_table { font-size: 10px; font-weight:normal; }
.mmlib_table td { vertical-align: top; }

/* Feed data related styles. */
.clear {
  clear: both;
  font-size: 0;
  height: 0;
  line-height: 0;
  overflow: hidden;
}
.afg-record {
  border-bottom: 1px solid #666;
  padding: 5px;
}
.afg-record-na {
  height: 60px;
  margin: 20px 0;
  text-align: center;
}
.afg-rec-meta {color: #666;}
.afg-rec-title {font-weight: bold;}

/* Modal popup related styles. */
.afg-mask {
  background-color: #666;
  filter: alpha(opacity=80);
  height: 100%;
  opacity: 0.8;
  width: 100%;
  -moz-opacity: 0.8;
}
.afg-mask,
.afg-dialog {
  left: 0;
  position: absolute;
  top: 0;
}

/* Page layout realted styles. */
#afg-header-region {
  background-color: #1155a0;
  overflow: hidden;
  width: 100%;
}
#afg-branding-region {padding: 5px;}
#afg-footer-region {
  background-color: #1155a0;
  overflow: hidden;
  width: 100%;
}
#afg-footer-content {float: right;}
#afg-content-region {
  background-color: #fff;
  overflow: hidden;
  width: 100%;
}
#afg-branding-btn {
  float: right;
  text-align: left;
}
#afg-branding-title {
  color: #fff;
  margin-right: 50px;
}
#afg-gadget-dialog {
  margin: 33px 5% 0 5%;
  width: 90%;
  text-align: center;
}

/* Modal popup content related styles. */
.afg-text {width: 100%;}
.afg-gobutton {margin-left: 10px;}
.afg-popup-link,
.afg-popup-link:link,
.afg-popup-link:visited,
.afg-popup-link:hover {
  color: #fff;
}

/* Style for pagination. */
.pagination {
  padding: 2px 5px;
  text-align: center;
}

/* Image Cropper related styles. */
.image-cropper {
  display: block;
  overflow: hidden;
  text-align: center;
}
.image-cropper div {margin: 0 -9999px;}
#branding-logo {
  height: 18px;
  width: 126px;
  float: left;
}
#branding-logo img {height: 18px;}

/* Style for loading. */
#afg-loading-container {
  text-align: center;
  width: 100%;
}

/* Header links related styles. */
#header-links li{
  float: left;
  padding-right: 10px;
}

#header-links a,
#header-links a:link,
#header-links a:visited,
#header-links a:hover {
  color: #fff;
  text-decoration: underline;
}

#afg-settings {
  color: #fff;
  margin: auto;
  overflow:hidden;
  text-align:left;
  width:100%;
}

#afg-settings li {
  float: left;
  line-height: 20px;
  padding-right: 5px;
}
.normal li {
  width: 45%;
}
.small li {
  width: 90%;
}
.separator {
  background-color: #ccc;
  clear: both;
  height: 1px;
  margin: 10px 0;
  padding: 0;
}
</style>
<script language="JavaScript" src="http://www.geoplugin.net/javascript.gp" type="text/javascript"></script>
<script>
/**
 * User prefs.
 * @type {_IG_Prefs}
 */
var prefs = new _IG_Prefs();

/**
 * Object for showing mini message.
 * @type {_IG_MiniMessage}
 */
var miniMsg;

/**
 * URL relates to get feed functionality.
 * @const
 * @type {string}
 */
var FEED_URL = 'http://www.allforgood.org/api/volopps?output=rss';

/**
 * To store or cache the feeds between pagination.
 * @type {Array}
 */
var feedRecords = [];

/**
 * Number of pages to be cached on each request to server.
 * @const
 * @type {number}
 */
var PAGES_PER_QUERY = 3;

/**
 * Parameters to be sent with feed URL to get feeds.
 * @type {Object}
 */
var feedParams = {
  vol_loc: '',
  vol_dist: '',
  type: '',
  q: '',
  key: 'gf-gadget',
  start: 1,
  timeperiod: prefs.getString('timePeriod'),
  num: prefs.getInt('storiesToRead') * PAGES_PER_QUERY + 1
};

/**
 * To store the information on current page number.
 * @type {number}
 */
var curPage = 1;

/**
 * To store the next page information for the cached pages during pagination
 * as key value pair.
 * @type {Object}
 */
var nextPageInfo = {};

/**
 * The container in which gadget is running on.
 */
var container = (function() {
  var urlParam = _args();
  return urlParam.container || urlParam.synd || 'unknown';
})();

/**
 * Adjust the height of the mask automatically.
 * Height 100% for the absolute positioned div is not supported in IE6.
 * This function will be called on window resize event and
 * while showing the Popup container with mask.
 */
function adjustMaskHeight() {
  var dialogHeight = _gel('afg-gadget-dialog').offsetHeight;
  var rootElementHeight = _gel('afg-main').offsetHeight;
  var height = Math.max(dialogHeight + 50, rootElementHeight);
  _gel('afg-gadget-mask').style.height = height + 'px';
  _IG_AdjustIFrameHeight(height);
}

/**
 * Adjust iframe height.
 */
function adjustIFrameHeight() {
  _IG_AdjustIFrameHeight(_gel('afg-main').offsetHeight);
}

/**
 * Convert to date object from date string.
 * @param {string} str The date in string format.
 *     If nothing is passed, returns current date.
 * @return {Date} Returns the date object of the given string.
 */
function getDateObj(str) {
  return new Date((str || '').replace(/-/g, '/'));
}

/**
 * This method formats the date string to expected format.
 * @param {string} str The date string from the feed.
 *     The expected input format is yyyy-MM-dd hh:mm:ss.
 * @return {string} Holds date string in 'MM/dd/yyyy' format.
 */
function getDateStr(str) {
  var rtn = '';
  if (str) {
    var date = getDateObj(str);
    var day = date.getDate();
    var month = date.getMonth() + 1;
    if (day < 10) {
      day = '0' + day;
    }
    if (month < 10) {
      month = '0' + month;
    }
    rtn = [month, day, date.getFullYear()].join('/');
  } 
  return rtn;
}

/**
 * This method will create HTML element string for single feed item.
 * @param {number} feedIndex Json feed with neccessary changes
 *     for single feed item.
 * @return {string} Returns html string for single feed item.
 */
function getHtmlForOneRecord(feedIndex) {
  var obj = feedRecords[feedIndex];
  var html = [
    '<div class="afg-record ', obj.id, '">',
    '<h3 class="afg-rec-title"> ',
    '<a href="', obj.titleLink, '" target="_blank">', obj.title, '</a>',
    '</h3>',
    '<p class="afg-rec-meta"> ',
    obj.location, ' - ', obj.period,
    '</p>',
    '</div>'
  ];
  return html.join('');
}

/**
 * This function stops the propagation of the event and
 * prevents the default behaviour of the event.
 * @param {Event} event Window event.
 * @return {boolean} Always false will be returned.
 */
function stopEvents(event) {
  event = event || window.event;
  event.stopPropagation();
  event.preventDefault();
  return false;
}

/**
 * This function updates the Branding title based on the location.
 * @param {string} location Search location value.
 * @param {string} searchText Search text.
 * @param {string} category Category text.
 */
function updateTitle(location, searchText, category) {
  prefs.set('searchText' , searchText || '');
  var str = [prefs.getMsg('recent_listings'), ' '];
  if (searchText) {
    str.push(prefs.getMsg('for'), ' <strong>\'', searchText, '\'<\/strong> ');
    _gel('afg-clear-search').style.display = 'block';
  } else {
    _gel('afg-clear-search').style.display = 'none';
  }
  if (location && location != 'virtual') {
    str.push(prefs.getMsg('near'), ' <strong>', location, '<\/strong> ');
  }
  if (category) {
    str.push(prefs.getMsg('in_category'), ' <strong>', category, '<\/strong>');
  }
  _gel('afg-branding-title').innerHTML = str.join('');
}

/**
 * Replaces the content region of the container by loading image.
 * The width of the passed element will not be changed.
 * The existing height will be retained, if it is more than 100px,
 * otherwise 100px will be set as its height.
 */
function loading() {
  var element = _gel('afg-content');
  var height = element.clientHeight || element.offsetHeight;
  var MIN_HEIGHT = 100;
  if (height < MIN_HEIGHT) {
    height = MIN_HEIGHT;
  }
  var html = [
    '<div id="afg-loading-container" style="',
    'margin:50px 0;height:', height - 100, 'px;">',
    '<img src="http://www.google.com/ig/images/spinner.gif" />',
    '<div>', prefs.getMsg('loading'), '</div></div>'
  ];
  element.innerHTML = html.join('');
}

/**
 * This function is used to show a popup dialog.
 * @param {string} showString Used to decide which form to be shown.
 */
function showDialog(showString) {
  _gel('afg-search-region-home').style.display = 'block';
  var searchForm = _gel('afg-search-form');
  var settingsForm = _gel('afg-settings-form');
  var focusElement;
  if (showString == 'settings') {
    searchForm.style.display = 'none';
    settingsForm.style.display = 'block';
    focusElement = settingsForm.elements[0];
  } else {
    settingsForm.style.display = 'none';
    searchForm.style.display = 'block';
    focusElement = searchForm.elements[0];
  }
  focusElement.focus();
  adjustMaskHeight();
}

/**
 * This function is used to hide the popup dialog.
 */
function hideDialog() {
  _gel('afg-search-region-home').style.display = 'none';

}

/**
 * Show the Records and update pagination objects
 */
function showRecordsAndUpdatePagination() {
  var html = [];
  var startIndex = (curPage - 1) * prefs.getInt('storiesToRead');
  var maxEndIndex = startIndex + prefs.getInt('storiesToRead');
  var endIndex = (maxEndIndex < feedRecords.length) ?
                 maxEndIndex : feedRecords.length;
  for (var i = startIndex; i < endIndex; i++) {
    html.push(getHtmlForOneRecord(i));
  }
  // Add pagination.
  html.push('<div class="pagination">',
      '<div style="width:100%;overflow:hidden;"><a target="_blank" ' +
      'href="http://www.allforgood.org/search#cache=1&num=10' +
      '&start=', feedParams.start,
      '&type=', (feedParams.type || 'all'),
      '&vol_loc=', _esc(feedParams.vol_loc),
      '&vol_dist=', _esc(feedParams.vol_dist),
      '&timeperiod=', feedParams.timeperiod,
      '&q=', _esc(feedParams.q),
      '" style="float:left;"  class="afg-pagination">',
      prefs.getMsg('see_more'),
      ' &gt;&gt;</a><span style="float:right;"> &nbsp;');
  if (curPage !== 1) {
    html.push('<a href="#" onclick="navigatePage(-1);return false;" ',
              'class="afg-pagination">&lt; ',
              prefs.getMsg('previous'), '</a> &nbsp;');
  }
  if (nextPageInfo['page-' + curPage]) {
    html.push('<a href="#" onclick="navigatePage(1);return false;" ',
              'class="afg-pagination">',
              prefs.getMsg('next'), ' &gt;</a>');
  }
  html.push('</span></div></div>');
  // Update content html.
  _gel('afg-content').innerHTML = html.join('');
  adjustIFrameHeight();
}

/**
 * Response error handler function.
 * This function will be called if the request is timed out.
 */
function responseErrorHandler() {
  var html = [
    '<div class="afg-record-na">', prefs.getMsg('no_data'),
    '&nbsp;<a href="#" onclick="requestFeed();return false;">',
    prefs.getMsg('try_again'), '</a></div>'
  ];
  _gel('afg-content').innerHTML = html.join('');
  adjustIFrameHeight();
}

/**
 * Update feed records from the received feed XML.
 * @param {Node} xmlContent XML content as callback function response.
 * @param {number} timerId Value stores a reference to the timer.
 */
function fetchRecords(xmlContent, timerId) {
  // Cancels the timeout set previously.
  clearTimeout(timerId);
  var recordsRequested = prefs.getInt('storiesToRead') * PAGES_PER_QUERY + 1;
  var pageRef, recordRef, item, jsonFeed, curNode, startDate, endDate;

  try {
    if (typeof xmlContent != 'object') {
      throw new Error('Invalid feed type');
    }

    var items = xmlContent.getElementsByTagName('item');
    var length = items.length;

    if (!length) {
      throw new Error('No feed available');
    }

    if (length == recordsRequested) {
      length = items.length - 1;
    }

    for (var i = 0; i < PAGES_PER_QUERY; i++) {
      pageRef = 'page-' + (curPage + i);
      recordRef = (i + 1) * prefs.getInt('storiesToRead');
      if (items[recordRef]) {
        nextPageInfo[pageRef] = true;
      }
    }

    for (var j = 0; j < length; j++) {
      item = items[j];
      jsonFeed = {id: 'rec-' + j};
      for (curNode = item.firstChild; curNode; curNode = curNode.nextSibling) {
        if (curNode.nodeType == 1) {
          var nodeVal = curNode.firstChild ? curNode.firstChild.nodeValue : '';
          switch (curNode.nodeName) {
            case 'title':
              jsonFeed.title = nodeVal;
              break;
            case 'link':
              jsonFeed.titleLink = nodeVal;
              break;
            case 'fp:location_name':
              jsonFeed.location = nodeVal;
              break;
            case 'description':
              jsonFeed.desc = nodeVal;
              break;
            case 'fp:startDate':
              jsonFeed.stdate = nodeVal;
              break;
            case 'fp:endDate':
              jsonFeed.enddate = nodeVal;
              break;
          }
        }
      }
      startDate = getDateStr(jsonFeed.stdate);
      endDate = getDateStr(jsonFeed.enddate)
      jsonFeed.period = (startDate == endDate) ? startDate :
          startDate + ' - ' + (endDate ? endDate : prefs.getMsg('Present'));
      feedRecords.push(jsonFeed);
    }
    showRecordsAndUpdatePagination();
  } catch (err) {
    // For both 'Invalid feed type' and 'No feed available' errors,
    // redirect to previous page if available,
    // shows 'Try again' message otherwise.
    if (curPage > 1) {
      nextPageInfo['page-' + (curPage - 1)] = false;
      navigatePage(-1);
    } else {
      var searchText = prefs.getString('searchText');
      var location = prefs.getString('prefLocation');
      var html = ['<div class="afg-record-na">', prefs.getMsg('your_search')];
      if (searchText) {
        html.push(' <strong>\'', searchText, '\'</strong>');
      } else if (location) {
        html.push(' ', prefs.getMsg('near'),
            ' <strong>\'', location, '\'</strong>');
      }
      html.push('&nbsp;', prefs.getMsg('not_match'), '<br/>');
      if (searchText) {
        html.push('<a href="#" onclick="showDialog(\'search\'); ',
            'return false;">', prefs.getMsg('search_again'), '</a></div>');
      } else if (location) {
        html.push('<a href="#" onclick="showDialog(\'settings\'); ',
            'return false;">', prefs.getMsg('change_settings'), '</a></div>');
      }
      _gel('afg-content').innerHTML = html.join('');
      adjustIFrameHeight();
    }
  }
}

/**
 * Prepare URL and send request for the feed.
 * On successful Ajax call fetchRecords() will be called.
 */
function requestFeed() {
  var feedUrl = [FEED_URL];
  for (var key in feedParams) {
    feedUrl.push(key + '=' + _esc(feedParams[key]));
  }
  var feedUrlString = feedUrl.join('&');
  loading();
  // Call responseErrorHandler function after 5 seconds.
  var timerId = setTimeout(responseErrorHandler, 5000);
  var callback = function(xmlContent){
    fetchRecords(xmlContent, timerId);
  }
  _IG_FetchXmlContent(feedUrlString, callback);
}

/**
 * This function will be called on all navigation stuff.
 * @param {number} step Navigation steps.
 */
function navigatePage(step) {
  curPage += step;
  // Check for avilablity of records.
  var startIndex = (curPage - 1) * prefs.getInt('storiesToRead');
  if (feedRecords[startIndex]) {
    // Records are already available in the feed, just parse it.
    showRecordsAndUpdatePagination();
  } else {
    // Records are not available, request for records.
    feedParams.start = startIndex + 1;
    requestFeed();
  }
}

/**
 * This function reads the user input,
 * updates title based on the prefered location,
 * resets the feed url parameters, cached feed records and meta information.
 * Also calls requestFeed() to initiate the request.
 * @param {string} opt_searchTxt Search text (optional).
 * @param {boolean} opt_hidePopup Information whether to hide the
 *     dialog window or not (optional).
 */
function getLatLng(json_rsp, opt_searchTxt, opt_hidePopup) {
  var latlng = 'err';
  try {
    if (json_rsp) {
      var jo = JSON.parse(decodeURIComponent(json_rsp));
      if (jo) {
        if (jo.Status.code == 200) {
          latlng = jo.Placemark[0].Point.coordinates[1] + ',' + jo.Placemark[0].Point.coordinates[0];
        }
      }
    }
  } catch(err) {
  }
  search(opt_searchTxt, opt_hidePopup, latlng);
}

function search(opt_searchTxt, opt_hidePopup, latlng) {
  var location = '';
  if (!latlng) {
    location = prefs.getString('prefLocation');
    if (location) {
      var url = 'http://maps.google.com/maps/geo?q=' + encodeURIComponent(location);
      _IG_FetchContent(url, _IG_Callback(getLatLng, opt_searchTxt, opt_hidePopup));
      return;
    } else {
      latlng = geoplugin_latitude() + ',' + geoplugin_longitude();
    }
  }

  if (latlng == 'err' || latlng == ',') {
    latlng = '';
  }
  
  var prefKeywords = prefs.getString('preferredKeywords');
  var category = prefs.getString('category');
  var searchText = opt_searchTxt || _gel('afg-search-text').value || '';
  updateTitle(_trim(location), searchText, category);
  if (category) {
    category = 'category:' + category;
  }
  feedParams.start = 1;
  if (_gel('afg-virtual').checked) {
    feedParams.type = 'virtual';
    feedParams.vol_loc = '';
  } else {
    feedParams.type = 'all';
    feedParams.vol_loc = (latlng || location);
  }
  feedParams.vol_dist = '100';
  feedParams.q = [category, prefKeywords, searchText].join(' ');
  feedParams.timeperiod = prefs.getString('timePeriod');
  // Reset FeedRecord and pagination related variables.
  feedRecords = [];
  curPage = 1;
  nextPageInfo = {};
  requestFeed();
  if (opt_hidePopup) {
    hideDialog();
  }
}

/**
 * This function is used to cancel the modal window when 'esc' key is pressed.
 * @param {Event} event Window event.
 */
function isCancel(event) {
  event = event || window.event;
  var key = event.keyCode || event.which || event.charCode;
  if (key == 27) {
    hideDialog();
  }
}

/**
 * Function to handle custom theme.
 */
function handleTheme() {
  var themePath = _trim(prefs.getString('themesFolder'));
  if (themePath) {
    var linkElement = document.createElement('link');
    linkElement.href = themePath + '/style.css';
    linkElement.rel = 'stylesheet';
    document.getElementsByTagName('head')[0].appendChild(linkElement);
    document.getElementsByTagName('body')[0].className += ' site-theme';

    _gel('afg-search-button').src = themePath + '/' +
        prefs.getMsg('search_btn') + '.gif';
    _gel('afg-embed-button').src = themePath + '/' +
        prefs.getMsg('embed_btn') + '.gif';
    _gel('afg-go-button').src = themePath + '/' +
        prefs.getMsg('go_btn') + '.gif';
    _gel('afg-ok-button').src = themePath + '/' +
        prefs.getMsg('ok_btn') + '.gif';
    _gel('afg-cancel-button').src = themePath + '/' +
        prefs.getMsg('cancel_btn') + '.gif';
    _gel('afg-cancel-button1').src = themePath + '/' +
        prefs.getMsg('cancel_btn') + '.gif';
  }
}

/**
 * Used to clear the search text box.
 */
function clearSearch() {
  _gel('afg-search-text').value = '';
  search();
}

/**
 * Set the location and restart the search.
 * @param {string} location Location text.
 */
function setLocation(location) {
  _gel('afg-location-text').value = location;
  setSettings();
}

/**
 * Used for setting the logo according to the size of container.
 */
function setLogoImage() {
  var gadgetWidth = 0;
  var themePath = _trim(prefs.getString('themesFolder'));
  var imgPath = themePath ?
      themePath + '/logo' :
      'http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/logo';
  if (typeof(window.innerWidth) == 'number') {
    // Non-IE
    gadgetWidth = window.innerWidth;
  } else if (document.documentElement && document.documentElement.clientWidth) {
    // IE 6+
    gadgetWidth = document.documentElement.clientWidth;
  } else if (document.body && document.body.clientWidth) {
    gadgetWidth = document.body.clientWidth;
  }

  // Loading branding logo according to availble size.
  var brandLogoStyle = _gel('branding-logo').style;
  var logoImage = _gel('logo-img');
  var logoImageStyle = logoImage.style;
  var settingsClass = 'normal';
  if (gadgetWidth <= 150) {
    imgPath += '_180';
    brandLogoStyle.width = '83px';
    brandLogoStyle.height = '';
    logoImageStyle.height = '11px';
    settingsClass = 'small';
  } else if (gadgetWidth <= 180){
    imgPath += '_180';
    brandLogoStyle.width = '95px';
    brandLogoStyle.height = '';
    logoImageStyle.height = '14px';
    settingsClass = 'small';
  } else if (gadgetWidth <= 200){
    imgPath += '_200';
    brandLogoStyle.width = '110px';
    brandLogoStyle.height = '';
    logoImageStyle.height = '18px';
  } else {
    brandLogoStyle.width = '126px';
    brandLogoStyle.height = '18px';
    logoImageStyle.height = '18px';
  }
  //Setting the source for logo image.
  logoImage.src = imgPath + '.gif';
  _gel('afg-settings').className = settingsClass;
}

/**
 * To get the select box value.
 * @param {string} id The slect bxox element id.
 * @return {string} The value of the select box.
 */
function getSelectBoxValue(id) {
  var element = _gel(id);
  return element.options[element.selectedIndex].value;
}

/**
 * Set the default selected value for the passed select box element.
 * @param {string} elementId The select box element id.
 * @param {string} value The default value of the select box.
 */
function setSelectBoxValue(elementId, value) {
  var element = _gel(elementId);
  var options = element.options;
  for (var i = 0; i < options.length; i++) {
    if (options[i].value == value) {
      element.selectedIndex = i;
      return;
    }
  }
}

/**
 * Special promotion for September 11 activities.
 */
function promote() {
  if (!miniMsg) {
    miniMsg = new _IG_MiniMessage(__MODULE_ID__, _gel('mini-message'));
  }
  var currentDate = new Date();
  var promoStart = new Date();
  promoStart.setFullYear(2009,8,1);
  promoStart.setHours(0,0,0);

  var promoEnd =  new Date();
  promoEnd.setFullYear(2009,8,15);
  promoEnd.setHours(0,0,1);
  if (promoStart < currentDate && currentDate < promoEnd) {
    var categoryElement = _gel('settings-categories');
    insertOption(categoryElement,
        new Option(prefs.getMsg('september_11'), 'September11'), 1);
    var timePeriodElement = _gel('settings-time-period');
    insertOption(timePeriodElement,
         new Option(prefs.getMsg('september_11'), '911'), 1);

    // Call promotion message.
    var onMessageHide = function() {
      setTimeout(adjustIFrameHeight, 500);
      return true;
    };
    var msg = [
      prefs.getMsg('promotion911'),
      ' <a href="javascript:setCategory(\'September11\')">',
      prefs.getMsg('find_listings'), '</a>'
    ].join('');
    window.msgElement = miniMsg.createDismissibleMessage(msg, onMessageHide);
    hideMiniMessage();
  } else {
    if (prefs.getString('timePeriod') == '911') {
      prefs.set('timePeriod', 'everything');
    }
    if (prefs.getString('category') == 'September11') {
      prefs.set('category', '');
    }
  }
}

/**
 * Insert option at specified index.
 */
function insertOption(selectBox, optionElement, index) {
  try {
    selectBox.add(optionElement, selectBox.options[index]);
  } catch(err) {
    selectBox.add(optionElement, index);
  }
}

/**
 * To set the default settings of the gadget.
 * It includes location, stories to read and categories.
 */
function setSettings() {
  _gel('afg-cancel-button1').style.display = '';

  var location = _gel('afg-virtual').checked ? 
    "virtual" : _gel('afg-location-text').value || '';
  prefs.set('hideSettings', 1);
  prefs.set('prefLocation', location);
  prefs.set('storiesToRead', getSelectBoxValue('settings-stories'));
  prefs.set('category', getSelectBoxValue('settings-categories'));
  prefs.set('timePeriod', getSelectBoxValue('settings-time-period'));

  feedParams.num = prefs.getInt('storiesToRead') * PAGES_PER_QUERY + 1;
  hideMiniMessage();
  hideDialog();

  search();
}

/**
 * To set the default values for the settings popup.
 */
function setDefaultSettingsUI() {
  setSelectBoxValue('settings-stories', prefs.getString('storiesToRead'));
  setSelectBoxValue('settings-categories', prefs.getString('category'));
  setSelectBoxValue('settings-time-period', prefs.getString('timePeriod'));
  _gel('afg-location-text').value = prefs.getString('prefLocation');
  if (_gel('afg-location-text').value == 'virtual') {
    _gel('afg-virtual').checked = 1;
    _gel('afg-location-text').disabled = 1;
  }
}

/**
 * To set/change the category.
 */
function setCategory(category) {
  setSelectBoxValue('settings-categories', category);
  setSettings();
}

/**
 * To hide the promotion mini message.
 */
function hideMiniMessage() {
  if (window.msgElement && (prefs.getString('category') == 'September11')) {
    miniMsg.dismissMessage(window.msgElement);
  }
}

/** 
 * Toggle the virtual location.
 */
function toggleVirtual() {
  _gel('afg-location-text').disabled = _gel('afg-virtual').checked;
}


/**
 * Called on load of the gadget.
 */
function init() {
  handleTheme();
  setLogoImage();
  promote();
  setDefaultSettingsUI();
  if (container == 'open' || prefs.getInt('hideSettings') == 1) {
    search();
  } else {
    _gel('afg-cancel-button1').style.display = 'none';
    showDialog('settings');
  }
}

/**
 * Resize handler to adjust the mask element height.
 * It sets mask element height equals to the body height.
 */
window.onresize = function() {
  setLogoImage();
  adjustMaskHeight();
};

/**
 * Entry point.
 */
_IG_RegisterOnloadHandler(init);

if(!this.JSON){JSON=function(){function f(n){return n<10?'0'+n:n}Date.prototype.toJSON=function(){return this.getUTCFullYear()+'-'+f(this.getUTCMonth()+1)+'-'+f(this.getUTCDate())+'T'+f(this.getUTCHours())+':'+f(this.getUTCMinutes())+':'+f(this.getUTCSeconds())+'Z'};var m={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'};function stringify(value,whitelist){var a,i,k,l,r=/["\\\x00-\x1f\x7f-\x9f]/g,v;switch(typeof value){case'string':return r.test(value)?'"'+value.replace(r,function(a){var c=m[a];if(c){return c}c=a.charCodeAt();return'\\u00'+Math.floor(c/16).toString(16)+(c%16).toString(16)})+'"':'"'+value+'"';case'number':return isFinite(value)?String(value):'null';case'boolean':case'null':return String(value);case'object':if(!value){return'null'}if(typeof value.toJSON==='function'){return stringify(value.toJSON())}a=[];if(typeof value.length==='number'&&!(value.propertyIsEnumerable('length'))){l=value.length;for(i=0;i<l;i+=1){a.push(stringify(value[i],whitelist)||'null')}return'['+a.join(',')+']'}if(whitelist){l=whitelist.length;for(i=0;i<l;i+=1){k=whitelist[i];if(typeof k==='string'){v=stringify(value[k],whitelist);if(v){a.push(stringify(k)+':'+v)}}}}else{for(k in value){if(typeof k==='string'){v=stringify(value[k],whitelist);if(v){a.push(stringify(k)+':'+v)}}}}return'{'+a.join(',')+'}'}}return{stringify:stringify,parse:function(text,filter){var j;function walk(k,v){var i,n;if(v&&typeof v==='object'){for(i in v){if(Object.prototype.hasOwnProperty.apply(v,[i])){n=walk(i,v[i]);if(n!==undefined){v[i]=n}}}}return filter(k,v)}if(/^[\],:{}\s]*$/.test(text.replace(/\\./g,'@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(:?[eE][+\-]?\d+)?/g,']').replace(/(?:^|:|,)(?:\s*\[)+/g,''))){j=eval('('+text+')');return typeof filter==='function'?walk('',j):j}throw new SyntaxError('parseJSON');}}}()}

</script>
<div id="afg-main">
  <div id="mini-message"></div>
  <div id="afg-header-region">
    <div id="afg-branding-region">
      <div id="afg-branding-btn">
        <img id="afg-search-button" class="afg-search-button"
            alt="__MSG_search__" title="__MSG_search__"
            src="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_search_btn__.gif"
            onerror="this.src='http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_search_btn__.gif'"
            onclick="showDialog('search')">
      </div>
      <h2 id="afg-branding-title"></h2>
      <ul id="header-links">
      <li id="afg-change-settings"><a href="javascript:showDialog('settings')">__MSG_change_settings__</a></li>
      <li id="afg-clear-search"><a href="javascript:clearSearch()">__MSG_clear_search__</a></li>
      </ul>
      <div class="clear">&nbsp;</div>
    </div>
  </div>
  <div id="afg-content-region">
    <div id="afg-content">
      <div style="padding:20px 5px;">
        <a href="javascript:showDialog('settings')">__MSG_configure__</a>
        __MSG_see_listings__.
      </div>
    </div>
  </div>
  <div id="afg-footer-region">
    <div style="margin:5px">
      <div id="afg-footer-content">
        <form target="_blank" action="http://www.gmodules.com/ig/creator">
          <input type="hidden" name="synd" value="open" />
          <input type="hidden" name="url"
              value="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/gadget.xml"/>
          <input type="hidden" name="nocache" value="1" />
          <input type="image" title="__MSG_embed__" class="afg-embed-button" id="afg-embed-button"
              style="cursor:pointer;" src="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_embed_btn__.gif"
              onerror="this.src='http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_embed_btn__.gif'"/>
        </form>
      </div>
      <a id="branding-logo" class="image-cropper" target="_blank"
          href="http://www.allforgood.org">
        <div>
          <img id="logo-img" alt="__MSG_brand_title__" title="__MSG_brand_title__"
              src="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/logo.gif"
              onerror="this.src='http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/logo.gif'"/>
        </div>
      </a>
      <div class="clear">&nbsp;</div>
    </div>
  </div>
  <!-- Search Region for Home View -->
  <div id="afg-search-region-home" style="display: none;">
    <div id="afg-gadget-mask" class="afg-mask" onclick="return stopEvents(event)"></div>
    <div id="afg-gadget-dialog" class="afg-dialog">
      <form name="frmSearch" id="afg-search-form" action="#" onsubmit="search();hideDialog();return false;">
        <div style="width:90%; margin:auto;">
          <input name="searchText" id="afg-search-text" tabIndex="1" type="text" onkeyup="isCancel(event);" autocomplete="off" class="afg-text"/>
          <div style="text-align:left; color: #fff; margin:1px 0 2px">
            __MSG_example__
            <a href="javascript:search('__MSG_education__', 1)" class="afg-popup-link">
                __MSG_education__</a>,
            <a href="javascript:search('__MSG_health__', 1)" class="afg-popup-link">
                __MSG_health__</a>,
            <a href="javascript:search('__MSG_nature__', 1)" class="afg-popup-link">
                __MSG_nature__</a>
          </div>
        </div>
        <div>
          <input id="afg-go-button" class="afg-go-button" tabIndex="2"
              alt="__MSG_go__" title="__MSG_go__" type="image"
              src="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_go_btn__.gif"
              onerror="this.src='http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_go_btn__.gif'"/>
          <img id="afg-cancel-button" class="afg-cancel-button"
              alt="__MSG_cancel__" title="__MSG_cancel__" tabIndex="3"
              onclick="hideDialog();" onkeypress="hideDialog();"
              src="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif"
              onerror="this.src='http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif'" />
        </div>
      </form>
      <form name="frmSettings" id="afg-settings-form" action="#" onsubmit="setSettings();return false;">
        <ul id="afg-settings" style="margin: auto;">
          <li>__MSG_category__</li>
          <li>
            <select name="categories" id="settings-categories" style="width: 100%;" tabIndex="3">
              <option value="">__MSG_all__</option>
              <option value="Animals">__MSG_animals__</option>
              <option value="Education">__MSG_education__</option>
              <option value="Health">__MSG_health__</option>
              <option value="Nature">__MSG_nature__</option>
              <option value="Seniors">__MSG_seniors__</option>
              <option value="Technology">__MSG_technology__</option>
            </select>
          </li>
          <li class="separator" style="width:100%">&nbsp;</li>
          <li style="clear:both;">__MSG_listings_per_page__</li>
          <li>
            <select name="stories" id="settings-stories" style="width: 100%;" tabIndex="1">
              <option value="4">4</option>
              <option value="5">5</option>
              <option value="6">6</option>
              <option value="7">7</option>
              <option value="8">8</option>
              <option value="9">9</option>
              <option value="10">10</option>
            </select>
          </li>
          <li class="separator" style="width:100%">&nbsp;</li>
          <li style="clear:both;">__MSG_time_period__</li>
          <li>
            <select name="timePeriod" id="settings-time-period" style="width: 100%;" tabIndex="2">
              <option value="everything">__MSG_everything__</option>
              <option value="today">__MSG_today__</option>
              <option value="this_weekend">__MSG_this_weekend__</option>
              <option value="this_week">__MSG_this_week__</option>
              <option value="this_month">__MSG_this_month__</option>
            </select>
          </li>
          <li class="separator" style="width:100%">&nbsp;</li>
          <li style="clear:both;">__MSG_location__</li>
          <li>
            <input name="locationText" id="afg-location-text" tabIndex="3" type="text" onkeyup="isCancel(event);" autocomplete="off" class="afg-text"/>
            <div style="text-align:left; color: #fff; margin:1px 0 2px">
              __MSG_example__
              <a href="javascript:setLocation('__MSG_default_location_value__')" class="afg-popup-link">
                  __MSG_default_location_value__</a>
            </div>
          </li>
          <li style="clear:both;">Location-less listings</li>
          <li>
            <input type="checkbox" id="afg-virtual" tabIndex="4" 
onChange="toggleVirtual()"/>
          </li>
          <li style="text-align:center;clear:both;float:none;width:100%;padding:0;">
            <input id="afg-ok-button" class="afg-ok-button" tabIndex="5"
              alt="__MSG_ok__" title="__MSG_ok__" type="image"
              src="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_ok_btn__.gif"
              onerror="this.src='http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_ok_btn__.gif'"/>
            <img id="afg-cancel-button1" class="afg-cancel-button"
              alt="__MSG_cancel__" title="__MSG_cancel__" tabIndex="6"
              onclick="hideDialog();" onkeypress="hideDialog();"
              src="http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif"
              onerror="this.src='http://allforgood.googlecode.com/svn/trunk/frontend/html/gadget/theme/__MSG_cancel_btn__.gif'" />
          </li>
        </ul>
      </form>
    </div>
  </div>
</div>
]]>
</Content>
</Module>
